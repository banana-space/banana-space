{
	"@metadata": {
		"authors": [
			"Amire80",
			"Anomie",
			"D41D8CD98F",
			"Liuxinyu970226",
			"McDutchie",
			"MusikAnimal",
			"Nemo bis",
			"Purodha",
			"Raymond",
			"Robby",
			"Shirayuki",
			"Siebrand",
			"Tacsipacsi",
			"Umherirrender",
			"Zoranzoki21"
		]
	},
	"paramvalidator-badbool": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - List of values recognized as \"true\", as a text list.\n* $4 - Count of values in $3.\n* $5 - List of values recognized as \"false\", as a text list. Includes {{msg-mw|paramvalidator-emptystring}}.\n* $6 - Count of values in $5.",
	"paramvalidator-badexpiry": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-badexpiry-duration": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Maximum permitted value.",
	"paramvalidator-badexpiry-duration-max": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Maximum permitted value.",
	"paramvalidator-badexpiry-past": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-badfloat": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-badfloat-notfinite": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-badinteger": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-badtimestamp": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-badupload-cantwrite": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Empty (unused).",
	"paramvalidator-badupload-formsize": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Empty (unused).",
	"paramvalidator-badupload-inisize": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Empty (unused).\n* $3 - Maximum allowed size, formated with appropriate units.",
	"paramvalidator-badupload-nofile": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Empty (unused).",
	"paramvalidator-badupload-notmpdir": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Empty (unused).",
	"paramvalidator-badupload-notupload": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Empty (unused).",
	"paramvalidator-badupload-partial": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Empty (unused).",
	"paramvalidator-badupload-phpext": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Empty (unused).",
	"paramvalidator-badvalue-enummulti": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Allowed values, as a text list.\n* $4 - Count of values in $3.",
	"paramvalidator-badvalue-enumnotmulti": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Allowed values, as a text list.\n* $4 - Count of values in $3.",
	"paramvalidator-deprecated-value": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-emptystring": "Text used to represent the empty string in help messages.",
	"paramvalidator-maxbytes": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Maximum allowed size in bytes.\n* $4 - Size of the supplied string in bytes.",
	"paramvalidator-maxchars": "Error in API parameter validation. \"Characters\" here refers to Unicode codepoints. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Maximum allowed size in Unicode codepoints.\n* $4 - Size of the supplied string in Unicode codepoints.",
	"paramvalidator-missingparam": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.",
	"paramvalidator-notmulti": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-outofrange-max": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Unused.\n* $4 - Maximum allowed value.",
	"paramvalidator-outofrange-minmax": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Minimum allowed value\n* $4 - Maximum allowed value.",
	"paramvalidator-outofrange-min": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - Minimum allowed value\n* $4 - Unused.",
	"paramvalidator-param-deprecated": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-param-sensitive": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-toomanyvalues": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Number of allowed values.",
	"paramvalidator-unclearnowtimestamp": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.",
	"paramvalidator-unrecognizedvalues": "Error in API parameter validation. Parameters:\n* $1 - Parameter name.\n* $2 - Parameter value.\n* $3 - List of unrecognized values, as a comma-separated list.\n* $4 - Count of values in $3.",
	"paramvalidator-help-default": "Help message indicating the default value of a parameter. Parameters:\n* $1 - The default value\n\nSee also: {{msg-mw|paramvalidator-help-default-empty}}\n{{Identical|Default}}",
	"paramvalidator-help-default-empty": "Help message indicating that the default value of a parameter is the empty string.\n\nSee also:\n* {{msg-mw|paramvalidator-help-default}}",
	"paramvalidator-help-deprecated": "Help message indicating the parameter is deprecated.",
	"paramvalidator-help-multi-separate": "Used to indicate how to separate multiple values.",
	"paramvalidator-help-multi-max": "Used to indicate the maximum number of values accepted for a multi-valued parameter when that value is influenced by the user being allowed high limits (otherwise {{msg-mw|paramvalidator-help-multi-max-simple}} is used).\n\nParameters:\n* $1 - Maximum value without high limits\n* $2 - Maximum value with high limits",
	"paramvalidator-help-multi-max-simple": "Used to indicate the maximum number of values accepted for a multi-valued parameter when that value is not influenced by the user being allowed high limits (otherwise {{msg-mw|paramvalidator-help-multi-max}} is used).\n\nParameters:\n* $1 - Maximum value",
	"paramvalidator-help-multi-all": "Used to indicate what string can be used to specify all possible values of a multi-valued parameter. \n\nParameters:\n* $1 - String to specify all possible values of the parameter",
	"paramvalidator-help-required": "Help message indicating the parameter is required.",
	"paramvalidator-help-type-boolean": "Used to indicate that a parameter is a boolean (\"true\" or \"false\") or list of booleans. Parameters:\n* $1 - 1 if the parameter takes one value, 2 if the parameter takes any number of values",
	"paramvalidator-help-type-enum-can-be-empty": "Used to indicate that one of the possible values in the list is the empty string.\n\nParameters:\n* $1 - Remainder of the list, as a comma-separated list.\n* $2 - Number of items in $1; may be 0",
	"paramvalidator-help-type-enum": "Used to display the possible values for a parameter taking a list of values\n\nParameters:\n* $1 - 1 if the parameter takes one value, 2 if the parameter takes any number of values\n* $2 - Comma-separated list of values, possibly formatted using {{msg-mw|paramvalidator-help-list-can-be-empty}}\n* $3 - Number of items in $2 (including the empty string, if applicable).\n{{Identical|Value}}",
	"paramvalidator-help-type-expiry": "Help message indicating valid values for the expiry type.\n\nParameters:\n* $1 -  1 if the parameter takes one value, 2 if the parameter takes any number of values\n* $2 - Comma-separated list of values representing 'never expires'.",
	"paramvalidator-help-type-float": "Used to indicate that a parameter is a decimal number or list of numbers. Parameters:\n* $1 - 1 if the parameter takes one value, 2 if the parameter takes any number of values",
	"paramvalidator-help-type-integer": "Used to indicate that a parameter is an integer or list of integers. Parameters:\n* $1 - 1 if the parameter takes one value, 2 if the parameter takes any number of values",
	"paramvalidator-help-type-limit": "Used to indicate that a parameter is a \"limit\" type. Parameters:\n* $1 - Always 1",
	"paramvalidator-help-type-number-max": "Used to display a numeric parameter with a maximum but no minimum value.\n\nParameters:\n* $1 - 1 if the parameter takes one value, 2 if the parameter takes any number of values\n* $2 - (Unused)\n* $3 - Maximum value\nSee also:\n* {{msg-mw|Api-help-param-number-min}}\n* {{msg-mw|Api-help-param-number-minmax}}",
	"paramvalidator-help-type-number-minmax": "Used to display a numeric parameter with a maximum and minimum values\n\nParameters:\n* $1 - 1 if the parameter takes one value, 2 if the parameter takes any number of values\n* $2 - Minimum value\n* $3 - Maximum value\n\nSee also:\n* {{msg-mw|paramvalidator-help-number-min}}\n* {{msg-mw|paramvalidator-help-number-max}}",
	"paramvalidator-help-type-number-min": "Used to display a numeric parameter with a minimum but no maximum value\n\nParameters:\n* $1 - 1 if the parameter takes one value, 2 if the parameter takes any number of values\n* $2 - Minimum value\n* $3 - unused\n\nSee also:\n* {{msg-mw|paramvalidator-help-number-max}}\n* {{msg-mw|paramvalidator-help-number-minmax}}",
	"paramvalidator-help-type-presenceboolean": "Used to indicate that a parameter is a checkbox-like boolean (true if present regardless of value, false if absent). Parameters:\n* $1 - Always 1.",
	"paramvalidator-help-type-string-maxbytes": "Used to display the maximum allowed length of a parameter, in bytes. Parameters:\n* $1 - Maximum allowed length in bytes.",
	"paramvalidator-help-type-string-maxchars": "Used to display the maximum allowed length of a parameter, in characters (i.e. Unicode codepoints).\n* $1 - Maximum allowed length in Unicode codepoints.",
	"paramvalidator-help-type-timestamp": "Used to indicate that a parameter is a timestamp or list of timestamps. Parameters:\n* $1 - 1 if the parameter takes one value, 2 if the parameter takes any number of values",
	"paramvalidator-help-type-upload": "Used to indicate that an 'upload'-type parameter must be posted as a file upload using multipart/form-data."
}
